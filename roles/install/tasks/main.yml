---

- name: Check if Terraform binary exists in search directories
  ansible.builtin.stat:
    path: "{{ item }}/tofu"
  register: terraform_binary_paths
  loop: "{{ terraform_search_directories }}"

- name: Get available Terraform versions
  ansible.builtin.command: "{{ item.stat.path }} version -json"
  register: terraform_version_info
  changed_when: false
  loop: "{{ terraform_binary_paths.results | selectattr('stat.exists') }}"
  loop_control:
    label: "{{ item.stat.path }}"

- name: Set Terraform versions fact
  ansible.builtin.set_fact:
    terraform_available_versions: >-
      {{ terraform_version_info.results | map(attribute='item.stat.path') | zip(
           terraform_version_info.results | map(attribute='stdout') | map('from_json') | map(attribute='terraform_version')
         ) | list }}


- name: Filter Terraform versions
  ansible.builtin.set_fact:
    terraform_acceptable_versions: >-
      {{-
        terraform_available_versions |
          selectattr('1', 'version', terraform_version_min, '>=') |
          selectattr('1', 'version', terraform_version_max, '<=') |
          sort(attribute = '1', reverse = True)
      }}

- name: Set Terraform binary path
  ansible.builtin.set_fact:
    terraform_binary_path: "{{ terraform_acceptable_versions.0.0 }}"
    terraform_detected_version: "{{ terraform_acceptable_versions.0.1 }}"
  when: "terraform_acceptable_versions | length > 0"

- name: Show terraform_binary_path
  ansible.builtin.debug:
    var: terraform_binary_path
  when: terraform_binary_path is defined
    

- name: Download Terraform binary if an acceptable version is not available
  when: terraform_binary_path is not defined
  become: "{{ terraform_download_binary_become }}"
  block:
    - name: Ensure Terraform bin directory exists
      ansible.builtin.file:
        path: "{{ terraform_binary_directory }}"
        state: directory
        mode: "0755"

    - name: Download Terraform binary
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ terraform_binary_url }}"
        dest: "{{ terraform_binary_directory }}"

    - name: Set current Terraform path fact
      ansible.builtin.set_fact:
        terraform_binary_path: "{{ terraform_binary_directory }}/tofu"

- name: Display Terraform path and version message
  ansible.builtin.debug:
    msg: >-
      Using Terraform version
      {{ terraform_detected_version | default(terraform_version_max) }}
      from {{ terraform_binary_path }}.
